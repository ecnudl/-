Leetcode #1043
算法：线性dp
class Solution {
public:
    int maxSumAfterPartitioning(vector<int>& arr, int k) {
        using ll = long long;
        int n = arr.size();
        vector<int> ans(n+1,0);
        for(int i = 1;i <= n;i++)
        {
            int maxvalue = arr[i-1];
            for(int j = i-1;j >= 0 && j >= i-k;j--)
            {
                ans[i] = max(ans[i],ans[j]+(i-j)*maxvalue);
                if(j > 0) maxvalue = max(maxvalue,arr[j-1]);
            }
        }
        return ans[n];
    }
};
