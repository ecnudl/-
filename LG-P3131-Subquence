难点在于如何减小复杂度
关键数学知识：若两个数字相减mod7 == 0 那么必有a%7 == b%7

#include <bits/stdc++.h>

using namespace std;

#define all(x) x.begin(),x.end()
#define pb push_back
using ll = long long;

const int N = 50010;
int f[N],s[N],first[N],last[N];
int n,MAX;

void solve()
{
    cin >> n;
    for(int i = 1;i <= n;i++) cin>>f[i];
    for(int i = 1;i <= n;i++) s[i] = (s[i-1]+f[i])%7;
}

int main()
{
    ios::sync_with_stdio(false);
    cin.tie(nullptr);cout.tie(nullptr);
    int t = 1;
//    cin>>t
    while(t--)
    {
        solve();
    }
    for(int i = 1;i <= n;i++)
    {
        if(first[s[i]] == 0) first[s[i]] = i;
        if(last[s[n-i+1]] == 0) last[s[n-i+1]] = n-i+1;
    }
    first[0] = 0;
    for(int i = 0;i <= 6;i++) MAX = max(MAX,last[i]-first[i]);
    cout<<MAX;
    return 0;
}
