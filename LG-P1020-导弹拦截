#include <bits/stdc++.h>

using namespace std;

#define all(x) x.begin(),x.end()
#define pb push_back
using ll = long long;

const int N = 50010;
int f[N],a[N],cnt;

set<int> ans;
vector<int> L;

int find(vector<int> &ch,int target)
{
    int l = 0;
    int r = ch.size()-1;
    int mid;
    while(l < r)
    {
        mid = (l+r)/2;
        if(ch[mid] < target){
            r = mid;
        }
        else{
            l = mid+1;
        }
    }
    return r;
}

void solve()
{
    int n;
    while(cin>>n)
    {
        f[++cnt] = n;
        if(ans.empty()){
            ans.insert(n);
        }
        else{
            auto cur = ans.lower_bound(n);
            if(cur != ans.end()){
                ans.erase(cur);
            }
            ans.insert(n);
        }
    }
    L.push_back(2e9);
    for(int i = 1;i <= cnt;i++)
    {
        if(f[i] <= L.back())
            L.push_back(f[i]);
        else
        {
            L[find(L,f[i])] = f[i];
        }
    }
    cout<<L.size()-1<<endl<<ans.size();
}

int main()
{
    ios::sync_with_stdio(false);
    cin.tie(nullptr);cout.tie(nullptr);
    int t = 1;
    while(t--)
    {
        solve();
    }
    return 0;
}
